# -*- coding: utf-8 -*-
"""automatización gmail.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RH3d26j70JhL7zEFGy9BsAyTz6vREHeD

email.message: Representando un mensaje de correo electrónico: https://docs.python.org/es/3/library/email.message.html#module-email.message

smtplib — Cliente de protocolo SMTP: https://docs.python.org/es/3/library/smtplib.html

imaplib — Protocolo del cliente IMAP4: https://docs.python.org/es/3/library/imaplib.html
"""

#Envío de correos mediante gmail

import smtplib
from email.mime.text import MIMEText

sender = "curso17abril2024@gmail.com"
password = "ogzinowgqipixxsq"

subject = "zzzzzzzzzzzzzzzTema del correo xxxxxx"
body = "Texto del mensaje enviado asdfasdfas. asdfasdfasdfasdf"

recipient = "garciafronti@gmail.com"


def send_email(subject, body, sender, recipients, password):
    msg = MIMEText(body)
    msg['Subject'] = subject
    msg['From'] = sender
    msg['To'] = recipient

    with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp_server:
        smtp_server.login(sender, password)
        smtp_server.sendmail(sender, recipient, msg.as_string())
        print("Mensaje enviado")

send_email(subject, body, sender, recipient, password)

#Envío de correos mediante gmail a destinatarios múltiples

import smtplib
from email.mime.text import MIMEText

subject = "Tema del correo"
body = "Texto del mensaje enviado"
sender = "curso17abril2024@gmail.com"
password = "ogzinowgqipixxsq"

# Read recipient email addresses from an Excel file (assuming 'Sheet1' contains the email addresses)
recipient_df = pd.read_excel('/content/destinatarios.xlsx', sheet_name='Sheet1')
recipient_emails = recipient_df['Email'].tolist()

def send_email(subject, body, sender, recipients, password):
    msg = MIMEText(body)
    msg['Subject'] = subject
    msg['From'] = sender
    msg['To'] = ", ".join(recipients)  # Join recipient addresses with a comma and space

    with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp_server:
        smtp_server.login(sender, password)
        smtp_server.sendmail(sender, recipient, msg.as_string())
        print("Mensaje enviado")

send_email(subject, body, sender, recipient_emails, password)

#Lectura rápida de origen, tema y fecha de los correos en la bandeja de entrada

import imaplib
import email
import pandas as pd
import email.mime

# Gmail credentials
GMAIL_USERNAME = 'curso17abril2024@gmail.com'
GMAIL_PASSWORD = 'ogzinowgqipixxsq'  # Generate an app password in your Google account settings (no es la clave habitual)

# Connect to Gmail
mail = imaplib.IMAP4_SSL('imap.gmail.com')
mail.login(GMAIL_USERNAME, GMAIL_PASSWORD)
mail.select('inbox')

# Search for emails (customize the search criteria if needed)
status, email_ids = mail.search(None, 'ALL')

# Initialize an empty list to store email data
email_data = []

# Iterate through email IDs
for num in email_ids[0].split():
    status, email_data_raw = mail.fetch(num, '(RFC822)')
    msg = email.message_from_bytes(email_data_raw[0][1])

    # Extract relevant information
    subject = msg['subject']
    sender = msg['from']
    date = msg['date']
     # Append to the list
    email_data.append({'Subject': subject, 'Sender': sender, 'Date': date})

# Create a DataFrame
df_emails = pd.DataFrame(email_data)

# Close the connection
mail.logout()

# Display the DataFrame
df_emails

df_emails

import pandas as pd
import matplotlib.pyplot as plt
from wordcloud import WordCloud

# Assuming you have a DataFrame called df_emails with a 'Subject' column
# Replace 'subject' with the actual column name if it's different
text = ' '.join(df_emails['Sender'])

# Generate the word cloud
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)

# Display the word cloud
plt.figure(figsize=(10, 6))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.show()

!pip install imap_tools
from imap_tools import MailBox
import email
my_email = "curso17abril2024@gmail.com"
my_pass = "ogzinowgqipixxsq"
mailbox =  MailBox('imap.gmail.com').login(my_email, my_pass)

# Initialize an empty list to store email data
email_IMAP = []

for msg in mailbox.fetch(charset='utf8'):
    #print("Message id:",msg.uid)
    #print("Message Subject:",msg.subject)
    #print("Message Date:", msg.date)
    #print("Message Text:", msg.text)
    email_IMAP.append({'From': msg.from_,'Subject': msg.subject, 'Date': msg.date, 'body': msg.text })

# Create a DataFrame
df_emails_IMAP = pd.DataFrame(email_IMAP)
df_emails_IMAP

import pandas as pd
import matplotlib.pyplot as plt
from wordcloud import WordCloud

# Assuming you have a DataFrame called df_emails_IMAP with a 'Body' column

text = ' '.join(df_emails_IMAP['body'])

# Generate the word cloud
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)

# Display the word cloud
plt.figure(figsize=(10, 6))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.show()