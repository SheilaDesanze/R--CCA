CAPPEO ENTRE 0 Y 1 :
=IF(A1 < 0, 0, IF(A1 > 1, 1, A1))

VARIOS IF:
=IFS(A2="CN",75%,A2="D1",10%,A2="D2",5%,A2="U1",10%)
    plt.xticks(df_filtered['Date'], df_filtered['Date'].dt.strftime('%m-%Y'), rotation=45)



import pandas as pd
import matplotlib.pyplot as plt
from openpyxl import Workbook
from openpyxl.drawing.image import Image
from openpyxl.utils.dataframe import dataframe_to_rows

# Carga de datos
escenario_central = pd.read_csv('Escenario_Central.csv')
escenario_downside = pd.read_csv('Escenario_Downside.csv')
escenario_upside = pd.read_csv('Escenario_Upside.csv')

# Asegúrate de que las fechas estén en el mismo formato
escenario_central['Date'] = pd.to_datetime(escenario_central['Date'])
escenario_downside['Date'] = pd.to_datetime(escenario_downside['Date'])
escenario_upside['Date'] = pd.to_datetime(escenario_upside['Date'])

# Lista de variables
variables = [
    "ARG_CASHOVER", "ARG_GN_N", "ARG_GDP", "ARG_M", "ARG_PSH", "ARG_TDEBT_USD",
    "ARG_TDEBT_DOL_G", "BRA_GDP", "GBL_WPFOOD", "USA_RSH", "USA_RLG", "GBL_WPO_WTI"
]

# Crea un libro Excel
wb = Workbook()

for variable in variables:
    # Crea el dataframe comparativo para la variable
    df_comparativo = pd.DataFrame({
        'Date': escenario_central['Date'],
        'Central': escenario_central[variable],
        'Downside': escenario_downside[variable],
        'Upside': escenario_upside[variable]
    })
    
    # Cálculo de métricas
    df_comparativo['Diff_Central_Downside'] = df_comparativo['Central'] - df_comparativo['Downside']
    df_comparativo['Diff_Central_Upside'] = df_comparativo['Central'] - df_comparativo['Upside']
    df_comparativo['Pct_Change_Downside'] = (df_comparativo['Diff_Central_Downside'] / df_comparativo['Central']) * 100
    df_comparativo['Pct_Change_Upside'] = (df_comparativo['Diff_Central_Upside'] / df_comparativo['Central']) * 100
    
    # Gráfico comparativo completo
    plt.figure(figsize=(12, 6))
    plt.plot(df_comparativo['Date'], df_comparativo['Central'], label='Escenario Central', linewidth=2)
    plt.plot(df_comparativo['Date'], df_comparativo['Downside'], label='Escenario Pesimista', linestyle='--')
    plt.plot(df_comparativo['Date'], df_comparativo['Upside'], label='Escenario Optimista', linestyle='-.')
    plt.title(f"Comparación de {variable} entre Escenarios (Completo)", fontsize=16)
    plt.xlabel("Fecha", fontsize=12)
    plt.ylabel(variable, fontsize=12)
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    graph_path_full = f"{variable}_full.png"
    plt.savefig(graph_path_full)
    plt.close()
    
    # Filtra los datos desde junio 2024
    df_filtered = df_comparativo[df_comparativo['Date'] >= '2024-06-01']
    
    # Gráfico comparativo desde junio 2024
    plt.figure(figsize=(12, 6))
    plt.plot(df_filtered['Date'], df_filtered['Central'], label='Escenario Central', linewidth=2)
    plt.plot(df_filtered['Date'], df_filtered['Downside'], label='Escenario Pesimista', linestyle='--')
    plt.plot(df_filtered['Date'], df_filtered['Upside'], label='Escenario Optimista', linestyle='-.')
    plt.title(f"Comparación de {variable} entre Escenarios (Desde Junio 2024)", fontsize=16)
    plt.xlabel("Fecha", fontsize=12)
    plt.ylabel(variable, fontsize=12)
    plt.legend()
    plt.grid(True)
    plt.tight_layout()
    graph_path_filtered = f"{variable}_filtered.png"
    plt.savefig(graph_path_filtered)
    plt.close()
    
    # Crea una hoja en el archivo Excel
    ws = wb.create_sheet(title=variable)
    
    # Inserta el dataframe en la hoja
    for r_idx, row in enumerate(dataframe_to_rows(df_comparativo, index=False, header=True), start=1):
        for c_idx, value in enumerate(row, start=1):
            ws.cell(row=r_idx, column=c_idx, value=value)
    
    # Inserta los gráficos en la hoja
    img_full = Image(graph_path_full)
    img_filtered = Image(graph_path_filtered)
    ws.add_image(img_full, f"A{len(df_comparativo) + 5}")
    ws.add_image(img_filtered, f"A{len(df_comparativo) + 30}")  # Ajusta para que no se superpongan

# Elimina la hoja predeterminada creada por openpyxl
if "Sheet" in wb.sheetnames:
    wb.remove(wb["Sheet"])

# Guarda el archivo Excel
wb.save("Comparacion_Escenarios.xlsx")

print("Archivo Excel generado exitosamente: Comparacion_Escenarios.xlsx")
