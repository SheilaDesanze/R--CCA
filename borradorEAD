


CASE 
    WHEN INSTR = 0 THEN 0
    WHEN utilization < 1 THEN 
        CASE 
            WHEN utilization + auf < 1 THEN auf
            ELSE 1 - utilization
        END
    ELSE 
        CASE 
            WHEN auf < 0 THEN auf
            ELSE 0
        END
END
--------------------------
-------------------------------------------------------

%macro identificarMissings(tabla, nuevoDataSet);
    proc contents data=&tabla. out=a noprint;
    run;
    
    proc sql noprint;
    select max(varnum) into: i
    from a;
    quit;

    %macro iterar;
        data &nuevoDataSet.;
        set &tabla.;
        %do j=1 %to &i.;
            proc sql noprint;
            select name into: var from a
            where varnum=&j.;
            select type into: type from a
            where varnum=&j.;
            select MAX(&var.) into: value from &tabla.;
            quit;

            %if &type. eq 1 %then %do;
                %if %sysfunc(abs(&value.)) eq . %then %do;
                    output; /* Solo guarda la observación si hay un valor faltante */
                %end;
            %end;
        %end;
        %mend iterar;
    run;
    %iterar;
%mend identificarMissings;

----------------------
-------------------
----------------------

%macro identificarMissings(tabla, nuevoDataSet);
    proc contents data=&tabla. out=a noprint;
    run;
    
    proc sql noprint;
    select max(varnum) into: i
    from a;
    quit;

    %macro iterar;
        data &nuevoDataSet.;
        set &tabla.;
        %do j=1 %to &i.;
            proc sql noprint;
            select name into: var from a
            where varnum=&j.;
            select type into: type from a
            where varnum=&j.;
            select MAX(&var.) into: value from &tabla.;
            quit;

            %if &type. eq 1 %then %do;
                %if %sysfunc(abs(&value.)) eq . %then %do;
                    output; /* Solo guarda la observación si hay un valor faltante */
                %end;
            %end;
        %end;
        %mend iterar;
    run;
    %iterar;
%mend identificarMissings;


---------------------------------------
---NUEVOO -------------------------------






options compress=yes;						
options symbolgen;						
options nonotes;						
*Libname CARM meta library = RMAD_D_CARM_LATAM;/*LATAMDCC*/
*Libname DPDRARG meta library = RMAD_D_PDRMIF_ARG;
*Libname PAPL_LA meta library= GRA_APL_LATAM;
libname RMADFEGD meta library=rmad_D_Feg;
*libname CLLATAM meta library=rmad_d_cl_latam;
libname FXRATESH meta library=RMAD_D_EXCHANGE_RATES_SH;
LIBNAME aux SPDE "/sas/data/rmad/analytics/data_output/model_development_arg/development/ARG/EAD" 
     DATAPATH=("/sas/data/rmad/analytics/data_output/model_development_arg/development/ARG/EAD") 
     INDEXPATH=("/sas/data/rmad/analytics/data_output/model_development_arg/development/ARG/EAD") 
           hdfshost=default PARTSIZE= 1048576 IOBLOCKSIZE=1048576;
libname _AR_EAD spde "/sas/data/rmad/data/argentina/detail/model/ar_ifrs9_ead"
        datapath=("/sas/data/rmad/data/argentina/detail/model/ar_ifrs9_ead/data")
        indexpath=("/sas/data/rmad/data/argentina/detail/model/ar_ifrs9_ead/index")
        hdfshost=default partsize=1048576 ioblocksize=1048576;
Libname CARM spde "/sas/data/rmad/data/argentina/detail/carm"
     datapath=("/sas/data/rmad/data/argentina/detail/carm/data") 
     indexpath=("/sas/data/rmad/data/argentina/detail/carm/index") 
     hdfshost=default PARTSIZE= 1048576;
Libname DPDRARG spde "/sas/data/rmad/data/argentina/detail/pdr_mif"
     datapath=("/sas/data/rmad/data/argentina/detail/pdr_mif/data") 
     indexpath=("/sas/data/rmad/data/argentina/detail/pdr_mif/index") 
     hdfshost=default PARTSIZE= 1048576;
Libname CLLATAM spde "/sas/data/rmad/data/argentina/detail/creditlens"
     datapath=("/sas/data/rmad/data/argentina/detail/creditlens/data") 
     indexpath=("/sas/data/rmad/data/argentina/detail/creditlens/index") 
     hdfshost=default PARTSIZE= 1048576;

/********************** MEVS *****************************/
%macro eliminaMissings(tabla);
    proc contents data=&tabla. out=a noprint;
    run;
    proc sql noprint;
    select max(varnum) into: i
    from a;
    quit;
    %macro iterar;
    %do j=1 %to &i.;
        proc sql noprint;
        select name into: var  from a
        where varnum=&j.;
        select type into: type  from a
        where varnum=&j.;
        ;quit;
        proc sql noprint;
        select nmiss(&var.) into: miss_count from &tabla.;
        quit;
        %if &miss_count. > 0 %then %do;
            %put Variable &var. tiene valores faltantes.;
            data variables_con_missings;
                length variable $32.;
                variable = "&var.";
                output;
            run;
        %end;
    %end;
    %mend iterar; 
    %iterar;
%mend eliminaMissings;

%macro guardaMissings(tabla);
    proc contents data=&tabla. out=a noprint;
    run;
    proc sql noprint;
    select name into: varlist separated by ' ' 
    from a
    where nmiss(name) > 0;
    quit;
    
    %if &sqlobs > 0 %then %do;
        data variables_con_missings;
            length variable $32.;
            do i = 1 to countw("&varlist");
                variable = scan("&varlist", i);
                output;
            end;
        run;
    %end;
%mend guardaMissings;

%macro tablaMevs(pais);
data mevs_&pais.(drop=isocodes);
set RMADFEGD.RMAD_D_FEG_IFRS9_HIST_Q22023;
drop FILE_LAST_UPDATED
ACTL_IND
country
;
where isocodes="&pais." and date >= '01jan2009'd;
run;
%guardaMissings(mevs_&pais.);
proc sql noprint;
select trim(name) || '=' || "&pais._" || name 
into :renamelist separated by ' '  
from dictionary.columns
where libname='WORK' and memname = "MEVS_&pais." and name<>'date';
quit;
 
%PUT &renamelist.;
data mevs_&pais.;
set mevs_&pais.;
rename
&renamelist
;
run;
%mend tablaMevs;
%tablaMevs(ARG);
%tablaMevs(BRA);
%tablaMevs(USA);
%tablaMevs(GBL);







-----------------
Sub EliminarDuplicadosDosColumnas()
    Dim LastRow As Long
    Dim Rng As Range
    Dim i As Long, j As Long
    
    LastRow = Cells(Rows.Count, "A").End(xlUp).Row ' Encuentra la última fila en Columna A

    For i = LastRow To 2 Step -1 ' Comenzando desde la última fila y retrocediendo
        For j = LastRow To 2 Step -1 ' Compara cada fila con todas las demás
            If Cells(i, 1).Value = Cells(j, 1).Value And Cells(i, 2).Value = Cells(j, 2).Value And i <> j Then
                Rows(i).Delete ' Si encuentra duplicado, elimina la fila
                Rows(j - 1).Delete ' Elimina también la otra fila duplicada
                LastRow = LastRow - 1 ' Reduce el conteo de filas
                Exit For
            End If
        Next j
    Next i
End Sub






