

indice_inicio_deflactor = 91

i = indice_inicio_deflactor
while i < len(df1_ok_vf):
    prev_period_index = i - 1
    df1_ok_vf.at[i, 'deflactor'] = df1_ok_vf.at[prev_period_index, 'deflactor'] * (df1_ok_vf.at[indice_inicio_deflactor, 'calculo'] / df1_ok_vf.at[prev_period_index, 'calculo'])
    i += 1



df1_ok_vf['calculo'] = df1_ok_vf['calculo'].astype('float64')






    case
      when date = '31MAR2009'd then 11.265666
      when date = '30JUN2009'd then 12.4534
      when date = '30SEP2009'd then 12.2427
      when date = '31MAR2010'd then 10.9310
      when date = '30JUN2010'd then 9.2759
      else .
    end as ARG_RES_DOL_M format=10.2
    

proc sql;
create table ifrs_cc_&mes. as
select
    a.*,
    "cuenta corriente" as producto,
    b.IMPORTE_ACUERDO
from
    ifrs a
    left join Acu.ACUERDOS_&mes. b on DNI_y_CUIT = TIPO_DE_DOCUMENTO||NUMERO_DE_DOCUMENTO
where
    b.IMPORTE_ACUERDO > 0
;
quit;





proc sql;
create table ifrs_cc_v2_&mes. as
select
    a.*,
    b.LIMITE_DE_COMPRA
from
    ifrs a
    left join adi.ADINTFP_&mes. b on DNI_y_CUIT = TIPO_DOCUMENTO_PDR||NUMERO_DOCUMENTO
where
    b.LIMITE_DE_COMPRA ne 999999999 and b.LIMITE_DE_COMPRA > 0
;
quit;








/* Paso 3: Exporta el conjunto de datos a un archivo Excel */
proc export data=sample_data
   outfile=cats('c:/users/yo/Documents/Soverein_', &mes, '.xlsx') 
   dbms=xlsx replace; 
   sheet='Sheet1'; 
run;
